import { ElementRef, Renderer2, OnDestroy, OnInit } from '@angular/core';
import { HighlightService } from '../service/highlight.service';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/take';
import 'rxjs/add/operator/filter';
/** There are 2 ways to highlight code
 *  1 - Directly using the code input (default)
 *  2 - Indirectly using element text content (used of code input is undefined)
 */
export declare class HighlightDirective implements OnInit, OnDestroy {
    private renderer;
    private hl;
    /** Element ref */
    el: HTMLElement;
    /** Highlight code from text content on changes */
    domObs: MutationObserver;
    /** Code text */
    code: string;
    /** Highlight, can be use to select highlight mode */
    highlight: string;
    /** Highlight code directly */
    setCode: string;
    hljsClass: boolean;
    constructor(el: ElementRef, renderer: Renderer2, hl: HighlightService);
    ngOnInit(): void;
    /** Highlight using element text content */
    highlightTextContent(): void;
    /** Highlight single element */
    highlightElement(el: HTMLElement, code: string): void;
    /** Highlight children */
    highlightChildren(el: HTMLElement, selector: string): void;
    ngOnDestroy(): void;
}
