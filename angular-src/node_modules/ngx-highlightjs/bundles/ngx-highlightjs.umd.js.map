{"version":3,"file":"ngx-highlightjs.umd.js","sources":["../../src/modules/highlight.module.ts","../../src/directives/highlight.directive.ts","../../src/service/highlight.service.ts"],"sourcesContent":["import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { HighlightDirective } from '../directives/highlight.directive';\r\nimport { HighlightService, OPTIONS } from '../service/highlight.service';\r\nimport { HighlightOptions } from '../models/highlight-options';\n/**\n * @param {?} options\n * @return {?}\n */\nexport function HighlightFactory(options: HighlightOptions) {\r\n  return new HighlightService(options);\r\n}\nexport class HighlightModule {\n/**\n * @param {?=} options\n * @return {?}\n */\nstatic forRoot(options?: HighlightOptions): ModuleWithProviders {\r\n    return {\r\n      ngModule: HighlightModule,\r\n      providers: [\r\n        {provide: OPTIONS, useValue: options},\r\n        {\r\n          provide: HighlightService,\r\n          useFactory: HighlightFactory,\r\n          deps: [OPTIONS]\r\n        }\r\n      ]\r\n    };\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  declarations: [HighlightDirective],\r\n  exports: [HighlightDirective]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HighlightModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHighlightModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHighlightModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Renderer2, OnDestroy, Input, OnInit, HostBinding } from '@angular/core';\r\nimport { HighlightService } from '../service/highlight.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { from } from 'rxjs/observable/from';\r\nimport'rxjs/add/operator/map';\r\nimport'rxjs/add/operator/take';\r\nimport'rxjs/add/operator/filter';\r\n\r\n/** Highlight.js library */\r\ndeclare const hljs: any;\n/**\n * There are 2 ways to highlight code\r 1 - Directly using the code input (default)\r 2 - Indirectly using element text content (used of code input is undefined)\n */\nexport class HighlightDirective implements OnInit, OnDestroy {\n/**\n * Element ref\n */\nel: HTMLElement;\n/**\n * Highlight code from text content on changes\n */\ndomObs: MutationObserver;\n/**\n * Code text\n */\ncode: string;\n/**\n * Highlight, can be use to select highlight mode\n */\nhighlight: string;\n/**\n * Highlight code directly\n * @param {?} code\n * @return {?}\n */\nset setCode(code: string) {\r\n    this.code = code;\r\n    this.hl.ready$.filter(ready => ready).take(1)\r\n      .subscribe(() => this.highlightElement(this.el, code));\r\n  }\r\n\r\n   hljsClass = true;\n/**\n * @param {?} el\n * @param {?} renderer\n * @param {?} hl\n */\nconstructor(el: ElementRef,\nprivate renderer: Renderer2,\nprivate hl: HighlightService) {\r\n    this.el = el.nativeElement;\r\n  }\n/**\n * @return {?}\n */\nngOnInit() {\r\n\r\n    /** If code is undefined, highlight using element text content */\r\n    if (!this.code && this.hl.options.auto) {\r\n\r\n      this.hl.ready$\r\n        .filter(ready => ready).take(1)\r\n        .subscribe(() => {\r\n\r\n          this.highlightTextContent();\r\n\r\n          /** Highlight when text content changes */\r\n          this.domObs = new MutationObserver(() => this.highlightTextContent());\r\n          this.domObs.observe(this.el, { childList: true, subtree: true });\r\n        });\r\n    }\r\n  }\n/**\n * Highlight using element text content\n * @return {?}\n */\nhighlightTextContent() {\r\n    if (!this.highlight) {\r\n      /** <code highlight [textContent]=\"code\"></code> */\r\n      if (this.el.tagName.toLowerCase() === 'code') {\r\n        this.highlightElement(this.el, this.el.innerText.trim());\r\n      } else {\r\n        console.warn(`[HighlightDirective]: Use 'highlight' on <code> elements only`);\r\n      }\r\n    } else if (this.highlight === 'all') {\r\n      /** <div highlight=\"all\">\r\n       *    <pre><code [textContent]=\"code\"></code></pre>\r\n       *    <pre><code [textContent]=\"code\"></code></pre>\r\n       *  </div>\r\n       */\r\n      this.highlightChildren(this.el, 'pre code');\r\n    } else {\r\n      /** <div highlight=\"section code\">\r\n       *    <section><code [textContent]=\"code\"></code></section>\r\n       *    <section><code [textContent]=\"code\"></code></section>\r\n       *  </div>\r\n       */\r\n      this.highlightChildren(this.el, this.highlight);\r\n    }\r\n  }\n/**\n * Highlight single element\n * @param {?} el\n * @param {?} code\n * @return {?}\n */\nhighlightElement(el: HTMLElement, code: string) {\r\n\r\n    const /** @type {?} */ highlightedCode = hljs.highlightAuto(code).value;\r\n\r\n    if (highlightedCode !== el.innerHTML) {\r\n      this.renderer.setProperty(el, 'innerHTML', highlightedCode);\r\n    }\r\n  }\n/**\n * Highlight children\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nhighlightChildren(el: HTMLElement, selector: string) {\r\n\r\n    const /** @type {?} */ codeElements = el.querySelectorAll(selector);\r\n\r\n    /** highlight all children with the same selector */\r\n    from(codeElements)\r\n      .filter((code: HTMLElement) => code.childNodes.length === 1 && code.childNodes[0].nodeName === '#text')\r\n      .map((codeElement: HTMLElement) => {\r\n        this.highlightElement(codeElement, codeElement.innerText.trim());\r\n      })\r\n      .take(1)\r\n      .subscribe();\r\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\r\n    /** Disconnect MutationObserver */\r\n    if (!this.code && this.hl.options.auto) {\r\n      this.domObs.disconnect();\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[highlight]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: HighlightService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'highlight': [{ type: Input },],\n'setCode': [{ type: Input, args: ['code', ] },],\n'hljsClass': [{ type: HostBinding, args: ['class.hljs', ] },],\n};\n}\n\nfunction HighlightDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHighlightDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHighlightDirective.ctorParameters;\n/** @type {?} */\nHighlightDirective.propDecorators;\n/**\n * Element ref\n * @type {?}\n */\nHighlightDirective.prototype.el;\n/**\n * Highlight code from text content on changes\n * @type {?}\n */\nHighlightDirective.prototype.domObs;\n/**\n * Code text\n * @type {?}\n */\nHighlightDirective.prototype.code;\n/**\n * Highlight, can be use to select highlight mode\n * @type {?}\n */\nHighlightDirective.prototype.highlight;\n/** @type {?} */\nHighlightDirective.prototype.hljsClass;\n/** @type {?} */\nHighlightDirective.prototype.renderer;\n/** @type {?} */\nHighlightDirective.prototype.hl;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { HighlightOptions } from '../models/highlight-options';\r\n\r\nexport const /** @type {?} */ OPTIONS = new InjectionToken<HighlightOptions>('OPTIONS');\r\n\r\ndeclare const hljs: any;\nexport class HighlightService {\r\n\r\n  options: HighlightOptions = {\r\n    theme: 'github',\r\n    path: 'assets/lib/hljs',\r\n    auto: true\r\n  };\n/**\n * hljs script on load event\n */\nready$ = new BehaviorSubject(false);\n/**\n * @param {?} options\n */\nconstructor(  options: HighlightOptions) {\r\n\r\n    this.options = {...this.options, ...options};\r\n\r\n    /** Load hljs script and style only once */\r\n    this.loadScript();\r\n    this.loadTheme();\r\n  }\n/**\n * @return {?}\n */\nloadScript() {\r\n    const /** @type {?} */ script = document.createElement('script');\r\n    script.async = true;\r\n    script.type = 'text/javascript';\r\n    script.onload = () => {\r\n      this.ready$.next(true);\r\n    };\r\n    script.src = `${this.options.path}/highlight.pack.js`;\r\n    document.head.appendChild(script);\r\n  }\n/**\n * @return {?}\n */\nloadTheme() {\r\n    const /** @type {?} */ style = document.createElement('link');\r\n    style.rel = 'stylesheet';\r\n    style.type = 'text/css';\r\n    style.href = `${this.options.path}/styles/${this.options.theme}.css`;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [OPTIONS, ] }, ]},\n];\n}\n\nfunction HighlightService_tsickle_Closure_declarations() {\n/** @type {?} */\nHighlightService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHighlightService.ctorParameters;\n/** @type {?} */\nHighlightService.prototype.options;\n/**\n * hljs script on load event\n * @type {?}\n */\nHighlightService.prototype.ready$;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgModule","HostBinding","Input","Renderer2","ElementRef","Directive","from","Optional","Inject","Injectable","BehaviorSubject","InjectionToken"],"mappings":"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"}